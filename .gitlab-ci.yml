variables:
  APPLICATION: "ams-vstore"
  REGISTRY: "docker-hub.2gis.ru"
  IMAGE: "ams/vstore"
  DEIS_CONTROLLER_STAGE: "http://deis.web.2gis.local"
  DEIS_CONTROLLER_PROD_N3: "http://deis.n3.nato/"
  DEIS_SCALE_STAGE: "web=1"
  DEIS_SCALE_PROD_N3: "web=1"

stages:
  - build:app
  - build:image
  - deploy

# ================= Build =================

build:app:
  image: $REGISTRY/microsoft/aspnetcore-build:1.1.0-projectjson
  stage: build:app
  environment: test
  script:
    - PASSPHRASE=$GPG_PASSWORD INPUT=env/credentials.gpg OUTPUT=.aws/credentials
    - mkdir .aws
    - echo $PASSPHRASE | gpg --output $OUTPUT --batch --no-tty --yes --passphrase-fd 0 --decrypt $INPUT
    - chmod +x build.sh
    - ./build.sh
  tags:
    - 2gis
    - docker
  artifacts:
    name: $APPLICATION
    expire_in: '1 week'
    paths:
      - publish/vstore/

build:image:
  image: $REGISTRY/2gis/docker:1.11.2
  services:
    - docker:dind
  stage: build:image
  environment: test
  only:
    - master
  variables:
    GIT_STRATEGY: none
  script:
    - REGISTRY=$REGISTRY IMAGE=$IMAGE TAG=master DOCKER_FILE=publish/vstore/Dockerfile DOCKER_BUILD_CONTEXT=publish/vstore make docker-build
    - REGISTRY=$REGISTRY IMAGE=$IMAGE TAG=master make docker-push
  tags:
    - 2gis
    - docker

# ================ Deploy =================

deploy:staging:
  image: $REGISTRY/2gis/deis-client:1.13
  stage: deploy
  environment: staging
  when: manual
  only:
    - master
  script:
    - echo "Deploy staging"
    - DEIS_CLIENT_CONFIG=dev.json DEIS_CONTROLLER=$DEIS_CONTROLLER_STAGE DEIS_USERNAME=$DEIS_STAGE_USERNAME DEIS_TOKEN=$DEIS_STAGE_TOKEN make deis-config
    - DEIS_PROFILE=dev SCALE=$DEIS_SCALE_STAGE REGISTRY=$REGISTRY IMAGE=$IMAGE TAG=master DEIS_APPLICATION=$APPLICATION DEIS_ENV_FILE=env/staging.ini make deis-pull
  tags:
    - 2gis
    - docker

deploy:production-n3:
  image: $REGISTRY/2gis/deis-client:1.13
  stage: deploy
  environment: production
  when: manual
  only:
    - master
  script:
    - echo "Deploy production"
    - DEIS_CLIENT_CONFIG=production-n3.json DEIS_CONTROLLER=$DEIS_CONTROLLER_PROD_N3 DEIS_USERNAME=$DEIS_PROD_N3_USERNAME DEIS_TOKEN=$DEIS_PROD_N3_TOKEN make deis-config
    - DEIS_PROFILE=production-n3 SCALE=$DEIS_SCALE_PROD_N3 REGISTRY=$REGISTRY IMAGE=$IMAGE TAG=master DEIS_APPLICATION=$APPLICATION DEIS_ENV_FILE=env/credentials make deis-pull
  tags:
    - 2gis
    - docker