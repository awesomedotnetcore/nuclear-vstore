variables:
  REGISTRY: "docker-hub.2gis.ru"

stages:
  - build:app
  - build:run-tests
  - build:image
  - deploy:stage
  - end

before_script:
  - export APPLICATION=`make -s print-APPLICATION`
  - source ${CI_PROJECT_DIR}/ci-starter-kit/utils.sh
  - export BRANCH_NAME=`echo ${CI_BUILD_REF_NAME} | tr '[:upper:]' '[:lower:]' | sed 's/_/-/g' | sed -e 's/[^a-z0-9-]//g'`
  - export GIT_SHA=`git rev-parse --short=8 HEAD`
  - export CI_DEV_TAG="dev-${BRANCH_NAME}-${GIT_SHA}"
  - export CI_TAG=`[[ -z ${CI_BUILD_TAG} ]] && echo "branch-${BRANCH_NAME}-${GIT_SHA}" || echo "${CI_BUILD_TAG}"`

# ================= Test & Build =================

build:app:
  image: $REGISTRY/microsoft/aspnetcore-build:1.1.0-projectjson
  stage: build:app
  when: always
  script:
    - dotnet restore --configfile ./.nuget/NuGet.Config
    - dotnet publish src/VStore.Host --configuration Release --runtime ubuntu.14.04-x64 --output publish/vstore
    - dotnet publish tests/VStore.UnitTests --configuration Release --runtime ubuntu.14.04-x64 --output publish/vstore-tests
  tags: [ 2gis, docker ]
  artifacts:
    name: "${CI_BUILD_REF_NAME}"
    expire_in: '1 week'
    paths:
      - publish/vstore/
      - publish/vstore-tests/

build:run-tests:
  image: $REGISTRY/microsoft/dotnet:1.1.1-sdk-1.0.0-preview2-1-003177
  stage: build:run-tests
  when: always
  script:
    - dotnet restore tests/VStore.UnitTests --configfile ./.nuget/NuGet.Config
    - dotnet test tests/VStore.UnitTests --output publish/vstore-tests --configuration Release --no-build
  tags: [ 2gis, docker ]
  dependencies:
    - build:app

build:image:
  stage: build:image
  when: manual
  script:
    - TAG=$CI_TAG DOCKER_FILE=publish/vstore/Dockerfile DOCKER_BUILD_CONTEXT=publish/vstore make docker-build
    - TAG=$CI_TAG make docker-push
  tags: [ docker-engine, io ]
  dependencies:
    - build:app
    - build:run-tests

# ================ Deploy =================

deploy:staging:
  stage: deploy:stage
  when: manual
  image: $REGISTRY/2gis-io/k8s-handle:latest
  script:
    - export ENV_TOKEN=`echo $CI_BUILD_TAG | sed 's/[^a-z0-9-]/-/g'`
    - export VSTORE_ENVIRONMENT=Stage
    - k8s-handle deploy --config config-stage.yaml --section vstore --sync-mode True
  only:
    - tags
  tags: [ 2gis, docker ]
  dependencies:
    - build:image

# ================= End =================

cleanup:registry:
  stage: end
  when: always
  script:
    - make docker-registry-images-cleanup TAG="master-" TIME_LIFE_IMAGE=604800 # 7 days
    - make docker-registry-images-cleanup TAG="branch-" TIME_LIFE_IMAGE=604800 # 7 days
    - make docker-registry-images-cleanup TAG="feature-" TIME_LIFE_IMAGE=604800 # 7 days
  dependencies: []
  tags: [ docker-engine, io ]

cleanup:runner:
  stage: end
  when: always
  script:
    - make docker-containers-cleanup
    - make docker-images-cleanup TAG="master-" TIME_LIFE_IMAGE=86400 # 1 day
    - make docker-images-cleanup TAG="branch-" TIME_LIFE_IMAGE=345600 # 4 days
    - make docker-images-cleanup TAG="feature-" TIME_LIFE_IMAGE=345600 # 4 days
  dependencies: []
  tags: [ docker-engine, io ]
